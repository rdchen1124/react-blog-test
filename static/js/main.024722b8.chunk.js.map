{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","WebAPI.js","pages/Home/Home.js","pages/Login/Login.js","pages/Post/Post.js","components/App/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","NavList","Nav","Link","props","$active","PrimaryContainer","SecondaryContainer","TitleContainer","Header","location","useLocation","useContext","user","setUser","history","useHistory","to","pathname","as","onClick","push","BASE_URL","getMe","fetch","headers","then","res","json","Root","PostHeader","PostContainer","PostTitle","PostDate","PostList","Post","post","id","title","Date","createdAt","toLocaleString","Home","useState","posts","setPosts","useEffect","data","map","ErrorMessage","Login","username","setUsername","password","setPassword","errMesg","setErrMesg","onSubmit","e","preventDefault","method","body","JSON","stringify","login","ok","message","type","value","onChange","target","toString","PostFormContainer","PostForm","form","PostFromInput","PostFormText","input","PostFormTextarea","textarea","SubmitButton","button","PostError","setTitle","content","setContent","postError","setPostError","addPost","SinglePostContainer","SinglePostTitle","SinglePostContent","SinglePostDate","SinglePost","article","Article","postId","useParams","setArticle","Number","App","useLayoutEffect","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.024722b8.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);","const TOKEN_NAME = 'token';\r\nexport const setAuthToken = (token) => {\r\n  window.localStorage.setItem(TOKEN_NAME, token);\r\n}\r\nexport const getAuthToken = () => {\r\n  return window.localStorage.getItem(TOKEN_NAME);\r\n}","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from '../../contexts';\nimport { setAuthToken } from '../../utils';\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n  box-sizing: border-box;\n  padding: 0px 32px; \n`\nconst NavList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 60px;\n`\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  height: 100%;\n  width: 100px;\n  cursor: pointer;\n  color: blue;\n  text-decoration: none;\n  ${props=>props.$active && `\n    background: rgba(0, 0, 0, 0.2);\n  `}\n`\nconst PrimaryContainer = styled.div`\n  display: flex;\n  align-items: center;\n  ${NavList} {\n    margin-left: 10px;\n  }\n`\nconst SecondaryContainer = styled.div`\n  display: flex;\n`\nconst TitleContainer = styled.div`\n  font-size: 32px;\n  font-weight:bold;\n`\nfunction Header() {\n  const location = useLocation();\n  const { user, setUser } = useContext(AuthContext);\n  const history = useHistory();\n  const handleLogout = () => {\n    setAuthToken('');\n    setUser(null);\n    if(location.pathname !== '/'){\n      history.push('/');\n    }\n  }\n  return (\n    <HeaderContainer>\n      <PrimaryContainer>\n        <TitleContainer>\n          MediRyan\n        </TitleContainer>\n        <NavList>\n          <Nav to='/' $active={location.pathname==='/'}>\n            首頁\n          </Nav>\n          {user && <Nav to='/post' $active={location.pathname==='/post'}>\n            發表文章\n          </Nav>}\n        </NavList>\n      </PrimaryContainer>\n      <SecondaryContainer>\n        <NavList>\n          {!user && <Nav to='/login' $active={location.pathname==='/login'}>\n            登入\n          </Nav>}\n          {user && <Nav as='div' onClick={handleLogout}>\n            登出\n          </Nav>}\n        </NavList>\n      </SecondaryContainer>\n    </HeaderContainer>\n  )\n}\nexport default Header;","import { getAuthToken } from \"./utils\";\r\nconst BASE_URL = 'https://student-json-api.lidemy.me';\r\nconst LIMIT = 10;\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc&_limit=${LIMIT}`)\r\n  .then(res=>res.json())\r\n}\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`)\r\n  .then(res=>res.json())\r\n}\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  }).then(res=>res.json())\r\n}\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  }).then(res=>res.json())\r\n}\r\nexport const addPost = (title, content) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'authorization': `Bearer ${token}`,\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body: content\r\n    })\r\n  }).then(res=>res.json())\r\n}\r\nexport const deletePost = (id) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'authorization': `Bearer ${token}`,\r\n    }\r\n  }).then(res=>res.json())\r\n}","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport {getPosts} from '../../WebAPI';\n\nconst Root = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  background: white;\n`;\nconst PostHeader = styled.div`\n  font-size: 28px;\n  font-weight: bold;\n  color: black;\n  padding-left: 30px;\n  margin-bottom: 10px;\n`;\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2); \n  padding: 16px;\n  align-items: flex-end;\n`;\nconst PostTitle = styled(Link)`\n  font-size: 20px;\n  color: #008CBA;\n  text-decoration: none;\n`\nconst PostDate = styled.div`\n  color: grey;\n`\nconst PostList = styled.div`\n  padding: 10px 5px;\n  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);\n`\nfunction Post({ post }){\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n    \n  )\n}\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    createdAt: PropTypes.number\n  })\n}\nexport default function Home() {\n  const [posts, setPosts] = useState([]);\n  useEffect(()=>{\n    getPosts().then(data=>setPosts(data))\n  },[]);\n  return (\n    <Root>\n      <PostHeader>文章列表</PostHeader>\n      <PostList>\n        {\n          posts && posts.map(post=>(\n          <Post key={post.id} post={post} />\n          ))\n        }\n      </PostList>\n    </Root>\n  )\n}","import React, { useContext, useState } from 'react';\nimport styled from 'styled-components';\n// import PropTypes from 'prop-types';\nimport { login, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from '../../contexts';\nconst ErrorMessage = styled.div`\n  background: red;\n  color: white;\n  padding: 2px 5px;\n  width: 300px;\n`\nexport default function Login() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMesg, setErrMesg] = useState('');\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrMesg('');\n    login(username, password).then(data=>{\n      if(data.ok === 0){\n        return setErrMesg(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then(res => {\n        if(res.ok !== 1){\n          setAuthToken(null);\n          return setErrMesg(res.message);\n        }\n        setUser(res.data)\n        history.push('/');\n      })\n      \n    });\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>username: {\" \"}\n        <input \n          type='text'\n          value={username}\n          onChange={(e)=>setUsername(e.target.value)}\n        />\n      </div>\n      <div>password: {\" \"}\n        <input\n          type='password'\n          value={password}\n          onChange={e=>setPassword(e.target.value)}\n        /></div>\n      <button>send</button>\n      {\n        errMesg && <ErrorMessage>{errMesg.toString()}</ErrorMessage>\n      }\n    </form>\n  )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getPost, addPost } from '../../WebAPI';\n// import { getAuthToken } from '../../utils';\nimport { AuthContext } from '../../contexts';\nimport PropTypes from 'prop-types';\nimport {\n  useParams,\n  useHistory\n} from \"react-router-dom\";\nconst PostContainer = styled.div`\n  margin: 0 auto;\n  width: 90%;\n  background: white;\n`;\nconst PostHeader = styled.div`\n  font-size: 28px;\n  font-weight: bold;\n  color: black;\n  padding-left: 30px;\n  margin-bottom: 10px;\n`;\nconst PostFormContainer = styled.div`\n  padding: 10px 20px;\n  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);\n  position: relative;\n  padding-bottom: 28px;\n`;\nconst PostForm = styled.form`\n`;\nconst PostFromInput = styled.div`\n  display: block;\n  color: #008CBA;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 5px 10px;\n  & + & {\n    margin-top: 10px;\n  }\n  div + div {\n    margin-top: 10px;\n  }\n`;\nconst PostFormText = styled.input`\n  width: 100%;\n  padding: 5px 5px;\n  box-sizing: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 3px;\n`\nconst PostFormTextarea = styled.textarea`\n  width: 100%;\n  padding: 8px 5px;\n  height: 300px;\n  box-sizing: border-box;\n  border-radius: 5px;\n`\nconst SubmitButton = styled.button`\n  height: 30px;\n  padding: 3px 5px;\n  background-color: white;\n  color: black;\n  font-size: 16px;\n  border: 1px solid #008CBA;\n  border-radius: 3px;\n  cursor: pointer;\n  transition-duration: 0.3s;\n  &:hover {\n    background: #008CBA;\n    color: white;\n  }\n`\nconst PostError = styled.div`\n  position: absolute;\n  background: red;\n  color: white;\n  padding: 2px 5px;\n  border-radius: 3px;\n  bottom: 1px;\n  right:30px;\n  left:30px;\n`\nexport default function Post() {\n  const {user} = useContext(AuthContext);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [postError, setPostError] = useState('');\n  const history = useHistory();\n  const handleTitleChange = (e)=>{\n    setTitle(e.target.value);\n  }\n  const handleContentChange = (e)=>{\n    setContent(e.target.value);\n  }\n  const handlePostSubmit = (e) => {\n    e.preventDefault();\n    setPostError('');\n    if(user){\n      addPost(title, content).then(res=>{\n        if(res.ok === 0){\n          return setPostError(res.message);\n        }\n        history.push('/');\n      })\n    }else{\n      return setPostError('您沒有權限新增文章');\n    }\n  }\n  return (\n    <PostContainer>\n      <PostHeader>新增文章</PostHeader>\n      <PostFormContainer>\n        <PostForm onSubmit={handlePostSubmit}>\n          <PostFromInput>\n            <div>文章標題:{\" \"}</div>\n            <div>\n              <PostFormText type='text' value={title} onChange={handleTitleChange} />\n            </div>\n          </PostFromInput>\n          <PostFromInput>\n            <div>文章內容:{\" \"}</div>\n            <div>\n              <PostFormTextarea type='text' value={content} onChange={handleContentChange} />\n            </div>\n          </PostFromInput>\n          <PostFromInput>\n            <SubmitButton>發布文章</SubmitButton>\n          </PostFromInput>\n          {\n          postError && <PostError>{postError.toString()}</PostError>\n          }\n        </PostForm>\n      </PostFormContainer>\n    </PostContainer>\n  )\n}\nconst Root = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  background: white;\n`;\nconst SinglePostContainer = styled.div`\n  padding: 5px 10px;\n`\nconst SinglePostTitle = styled.div`\n  font-size: 28px;\n  font-weight: bold;\n  color: #008CBA;\n`\nconst SinglePostContent = styled.div`\n  margin-top: 10px;\n  white-space: pre-line;\n  padding: 10px 0px;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n`\nconst SinglePostDate = styled.div`\n  font-size: 12px;\n  color: grey;\n`\nfunction SinglePost({ article }){\n  return (\n    <SinglePostContainer>\n      <SinglePostTitle>{article.title}</SinglePostTitle>\n      <SinglePostContent>{article.body}</SinglePostContent>\n      <SinglePostDate>{new Date(article.createdAt).toLocaleString()}</SinglePostDate>\n    </SinglePostContainer>\n  )\n}\nSinglePost.propTypes = {\n  article: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number\n  })\n}\nexport function Article() {\n  let { postId } = useParams();\n  const [article, setArticle] = useState({});\n  useEffect(()=>{\n    getPost(Number(postId)).then(data=>setArticle(data[0]))\n  },[postId])\n  return (\n    <Root>\n      <SinglePost article={article} />\n    </Root>\n  )\n}","import React, { useState, useLayoutEffect } from 'react';\nimport styled from 'styled-components';\n// import PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Header from '../Header' \nimport Home from '../../pages/Home';\nimport Login from '../../pages/Login';\nimport Post, { Article } from '../../pages/Post';\nimport { AuthContext } from '../../contexts';\nimport { getMe } from '../../WebAPI';\nimport { getAuthToken } from '../../utils';\nconst Root = styled.div`\n  padding-top: 60px;\n`;\nfunction App() {\n  const [user, setUser] = useState(null);\n  useLayoutEffect(()=>{\n    //(TODO) 有 token 才會 call getMe() 檢查 token，若檢查完成才算登入\n    if(getAuthToken()){\n      getMe().then(res=>{\n        if(res.ok){\n          setUser(res.data);\n        }\n      })\n    }\n  }, [])\n  return (\n    <AuthContext.Provider value={{user, setUser}}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/post'>\n              <Post />\n            </Route>\n            <Route path='/posts/:postId'>\n              <Article />\n            </Route>\n            <Route path='/login'>\n              <Login />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}